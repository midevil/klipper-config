# This file contains common pin mappings for the Two Trees Bluer    
# Plus printer.    
    
# To use this config, the firmware should be compiled for the STM32F103.    
# When running "make menuconfig" you have to:    
# - enable "extra low-level configuration setup",    
# - select the 28KiB bootloader,    
# - select serial (on USART3 PB11/PB10) communication    
    
# Note that the "make flash" command does not work with the Sapphire    
# Pro. After running "make", run the following command:    
#   ./scripts/update_mks_robin.py out/klipper.bin out/Robin_nano43.bin    
# Copy the file out/Robin_nano43.bin to an SD card and then restart the printer with that SD card.    
    
# See docs/Config_Reference.md for a description of parameters.    
[virtual_sdcard]
path: ~/printer_data/gcodes
[display_status]
[pause_resume]
[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
gcode:
 PAUSE_BASE

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
variable_park: True
gcode:
  ## Move head and retract only if not already in the pause state and park set to true
  {% if printer.pause_resume.is_paused|lower == 'false' and park|lower == 'true'%}
    _TOOLHEAD_PARK_PAUSE_CANCEL
  {% endif %}
  TURN_OFF_HEATERS
  CANCEL_PRINT_BASE

[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
  ##### read extrude from  _TOOLHEAD_PARK_PAUSE_CANCEL  macro #####
  {% set extrude = printer['gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL'].extrude %}
  #### get VELOCITY parameter if specified ####
  {% if 'VELOCITY' in params|upper %}
    {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
  {%else %}
    {% set get_params = "" %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    M83
    G1 E{extrude} F2100
    {% if printer.gcode_move.absolute_extrude |lower == 'true' %} M82 {% endif %}
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}  
  RESUME_BASE {get_params}

[stepper_x]    
step_pin: PE3    
dir_pin: PE2    
enable_pin: !PE4    
microsteps: 16    
full_steps_per_rotation: 400    
#rotation_distance = 400 * 16 / 160    
rotation_distance: 40    
endstop_pin: !PA15    
position_endstop: -5    
position_min: -5    
position_max: 300    
homing_speed: 50    
    
[stepper_y]    
step_pin: PE0    
dir_pin: !PB9    
enable_pin: !PE1    
microsteps: 16    
#rotation_distance = 400 * 16 / 160    
rotation_distance: 40    
full_steps_per_rotation: 400    
endstop_pin: !PA12    
position_endstop: -15    
position_min: -15    
position_max: 300    
homing_speed: 50    
    
[stepper_z]    
step_pin: PB5    
dir_pin: !PB4    
enable_pin: !PB8    
microsteps: 16    
#rotation_distance = 200 * 16 / 400    
rotation_distance: 8    
full_steps_per_rotation: 200    
endstop_pin: probe:z_virtual_endstop    
position_max: 400    
position_min: -4    
    
[extruder]    
step_pin: PD6    
dir_pin: !PD3    
enable_pin: !PB3    
microsteps: 16    
#rotation_distance = 200 * 16 / 430    
rotation_distance: 7.441860465    
full_steps_per_rotation: 200    
nozzle_diameter: 0.400    
filament_diameter: 1.750    
pressure_advance: 0.7    
max_extrude_only_distance: 700    
heater_pin: PC3    
sensor_type: EPCOS 100K B57560G104F    
sensor_pin: PC1    
min_temp: 0    
max_temp: 260    
#PID_CALIBRATE HEATER=extruder TARGET=200    
control = pid    
pid_kp = 30.429    
pid_ki = 1.811    
pid_kd = 127.801    
    
[heater_bed]    
heater_pin: PA0    
sensor_type: EPCOS 100K B57560G104F    
sensor_pin: PC0    
min_temp: 0    
max_temp: 100    
#PID_CALIBRATE HEATER=heater_bed TARGET=50    
control = pid    
pid_Kp=66.855    
pid_Ki=0.839    
pid_Kd=1331.242    
          
[homing_override]    
set_position_z: 0    
gcode:    
    # Use absolute coordinates    
    G90    
    # Move up Z8    
    G1 Z8    
    # Home the printer    
    G28 X Y    
    # Move    
    G0 X135 Y120 F9000    
    #quick probe    
    G28 Z    
    # Move up Z8    
    G1 Z8    
    # move corner    
    G1 X0 Y0 Z5 F3000    
        
[bed_mesh]    
speed: 120    
horizontal_move_z: 8    
#the probe positions    
mesh_min: 15,15    
mesh_max: 300, 300    
probe_count: 5, 5    
fade_end: 10    
split_delta_z: 0.01    
move_check_distance: 3    
mesh_pps: 2, 2    
algorithm: lagrange    
relative_reference_index: 12    
    
[screws_tilt_adjust]    
#SCREWS_TILT_CALCULATE    
screw1: 15,1    
screw1_name: front left screw    
screw2: 258,1    
screw2_name: front right screw    
screw3: 258,240    
screw3_name: rear right screw    
screw4: 15,240    
screw4_name: rear left screw    
horizontal_move_z: 8    
screw_thread: CW-M3    
    
[bltouch]    
#PROBE    
#PROBE_CALIBRATE    
sensor_pin: ^PA11    
control_pin: PA8    
x_offset: 17    
y_offset: 29    
# 3.800    
#z_offset: 2.988   
speed: 0.5    
samples: 3    
lift_speed: 3.0    
samples_result: average    
samples_tolerance: 0.100    
samples_tolerance_retries: 2    
    
[filament_switch_sensor filament_sensor]    
#runout_gcode:    
#insert_gcode:    
switch_pin: ^PA4    
    
[fan]    
pin: PB1    
    
[temperature_sensor mcu]    
sensor_type: temperature_mcu    
    
[temperature_sensor pi]    
sensor_type: temperature_host    
    
[mcu]    
serial: /dev/serial/by-path/platform-1c1c400.usb-usb-0:1:1.0-port0
#serial: /dev/ttyUSB0    
baud: 250000    
restart_method: command    
    
[printer]    
kinematics: cartesian    
max_velocity: 500    
max_accel: 3500    
max_z_velocity: 25    
max_z_accel: 100    
 # originele zoffset 2.988   
#fluiddip configurations    
#[include client_macros.cfg]    
#[include client.cfg]    
#[include mes_macros.cfg]

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [bltouch]
#*# z_offset = 3.6
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	0.240833, 0.085833, -0.013333, -0.030000, -0.001667
#*# 	0.311667, 0.137500, 0.014167, -0.014167, -0.027500
#*# 	0.303333, 0.128333, 0.000000, -0.054167, -0.077500
#*# 	0.222500, 0.050833, -0.064167, -0.100000, -0.107500
#*# 	0.219167, 0.061667, -0.028333, -0.050000, -0.061667
#*# tension = 0.2
#*# min_x = 15.0
#*# algo = lagrange
#*# y_count = 5
#*# mesh_y_pps = 2
#*# min_y = 15.0
#*# x_count = 5
#*# max_y = 300.0
#*# mesh_x_pps = 2
#*# max_x = 300.0
#*#
#*# [bed_mesh wim]
#*# version = 1
#*# points =
#*# 	  0.240833, 0.085833, -0.013333, -0.030000, -0.001667
#*# 	  0.311667, 0.137500, 0.014167, -0.014167, -0.027500
#*# 	  0.303333, 0.128333, 0.000000, -0.054167, -0.077500
#*# 	  0.222500, 0.050833, -0.064167, -0.100000, -0.107500
#*# 	  0.219167, 0.061667, -0.028333, -0.050000, -0.061667
#*# tension = 0.2
#*# mesh_x_pps = 2
#*# algo = lagrange
#*# min_x = 15.0
#*# min_y = 15.0
#*# y_count = 5
#*# mesh_y_pps = 2
#*# x_count = 5
#*# max_x = 300.0
#*# max_y = 300.0
